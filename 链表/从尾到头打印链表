从尾到头打印链表 

题目描述
输入一个链表，按链表值从尾到头的顺序返回一个ArrayList。

三种方法解答：

第一种：利用栈

/**
*  struct ListNode {
*        int val;
*        struct ListNode *next;
*        ListNode(int x) :
*              val(x), next(NULL) {
*        }
*  };
*/
class Solution {
public:
    vector<int> printListFromTailToHead(ListNode* head) {
        vector<int>res;
        stack<int>st;
        ListNode* p = head;
        while(p){
            st.push(p->val);
            p = p->next;
        }
        while(!st.empty()){
            res.push_back(st.top());
            st.pop();
        }
        return res;
    }
};

第二种：先从前往后存到vector，再倒置

class Solution {
public:
    vector<int> printListFromTailToHead(ListNode* head) {
        vector<int>res;
        ListNode* p = head;
        while(p){
            res.push_back(p->val);
            p = p->next;
        }
        int i = 0,j = res.size()-1;
        while(i < j){
            swap(res[i],res[j]);
            i++;
            j--;
        }
        return res;
    }
};

第三种：递归，递归的本质就是栈

class Solution {
public:
    vector<int>res;
    vector<int> printListFromTailToHead(ListNode* head) {
        ListNode* p = head;
        if(p != NULL){
            if(p->next!=NULL)
                printListFromTailToHead(p->next);
            res.push_back(p->val);
        }
        return res;
    }
};
