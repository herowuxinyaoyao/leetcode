34. 在排序数组中查找元素的第一个和最后一个位置
给定一个按照升序排列的整数数组 nums，和一个目标值 target。找出给定目标值在数组中的开始位置和结束位置。

你的算法时间复杂度必须是 O(log n) 级别。

如果数组中不存在目标值，返回 [-1, -1]。

示例 1:

输入: nums = [5,7,7,8,8,10], target = 8
输出: [3,4]

示例 2:

输入: nums = [5,7,7,8,8,10], target = 6
输出: [-1,-1]
//先用二分查找法找出ix,然后再两边搜索
class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        int ix = search(nums,0,nums.size()-1,target);
        if(ix == -1)
            return {-1,-1};
        int left = ix,right = ix;
        while(left > 0 && nums[left-1] == nums[ix])
            left--;
        while(right < nums.size()-1&& nums[right+1] == nums[ix])
            right++;
        return {left,right};
        
    }
    
    int search(vector<int>& nums, int left,int right,int target){
        int mid = left + (right - left) / 2;
        while(left <= right){
            if(nums[mid] == target)
            return mid;
            else if(nums[mid] < target)
                return search(nums,mid+1,right,target);
            else
                return search(nums,left,mid-1,target);
        }
        return -1;
            
    }
};
