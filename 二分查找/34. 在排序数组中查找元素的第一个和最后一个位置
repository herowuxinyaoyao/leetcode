34. 在排序数组中查找元素的第一个和最后一个位置

给定一个按照升序排列的整数数组 nums，和一个目标值 target。找出给定目标值在数组中的开始位置和结束位置。
你的算法时间复杂度必须是 O(log n) 级别。
如果数组中不存在目标值，返回 [-1, -1]。
示例 1:
输入: nums = [5,7,7,8,8,10], target = 8
输出: [3,4]
示例 2:
输入: nums = [5,7,7,8,8,10], target = 6
输出: [-1,-1]

class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        int left=0;
        int right=nums.size()-1;
        vector<int> res={-1,-1};
        bool find=false;
       // while(right >=left && find==false && nums[left]<=target )
        while(right >=left && find==false)
        {
            int mid=(left+right)>>1;
            if(nums[mid]>target)
                right=mid-1;
            else if(nums[mid]<target)
                left=mid+1;
            else
            {
                find=true;
                while(mid>0 && nums[mid-1]==target)     //向前找起始点
                    mid--;
                res[0]=mid;
                while(mid < nums.size()-1 && nums[mid+1]==target)   //向后找终止点
                    mid++;
                res[1]=mid;
            }
        }
        return res;
    }
};
