279. 完全平方数
给定正整数 n，找到若干个完全平方数（比如 1, 4, 9, 16, ...）使得它们的和等于 n。你需要让组成和的完全平方数的个数最少。
示例 1:
输入: n = 12
输出: 3 
解释: 12 = 4 + 4 + 4.
示例 2:
输入: n = 13
输出: 2
解释: 13 = 4 + 9.


状态转移方程为：
dp[i]=min(dp[i],dp[i−j∗j]+1)
dp[i−j∗j]+1是前面dp[i−j∗j]这个数的完全平方数个数加j∗j这一个完全平方数，
所以＋1      


class Solution {
public:
    int numSquares(int n) {
        vector<int> dp;
        for(int i=0;i<=n;i++) 
            dp.push_back(i);
        for(int i=2;i<=n;i++)
        {
            for(int j=1;j*j<=i;j++)
            {
                dp[i] = min(dp[i],dp[i-j*j]+1);
            }
        }
        return dp.back();

    }
};
