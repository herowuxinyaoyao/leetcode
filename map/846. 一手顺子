846. 一手顺子
爱丽丝有一手（hand）由整数数组给定的牌。 
现在她想把牌重新排列成组，使得每个组的大小都是 W，且由 W 张连续的牌组成。
如果她可以完成分组就返回 true，否则返回 false。
 

示例 1：
输入：hand = [1,2,3,6,2,3,4,7,8], W = 3
输出：true
解释：爱丽丝的手牌可以被重新排列为 [1,2,3]，[2,3,4]，[6,7,8]。
示例 2：
输入：hand = [1,2,3,4,5], W = 4
输出：false
解释：爱丽丝的手牌无法被重新排列成几个大小为 4 的组。
 
提示：
1 <= hand.length <= 10000
0 <= hand[i] <= 10^9
1 <= W <= hand.length

//代码
#include <iostream>
#include <map>
#include <vector>
using namespace std;
bool ispai(vector<int>& res, int w) {
	map<int, int>m;
	for (int a : res)//建立map,从小到大排列，并统计每个数出现次数
		++m[a];
	while (!m.empty()) {
		int start = m.begin()->first;
		for (int i = 0; i < w; i++) {
			if (!m.count(start + i)) {
				
				return false;
				
			}
				
			if (--m[start + i] == 0)
				m.erase(start + i);
		}
	}
	
	return true;
	
}
int main() {
	vector<int>res{ 1,5,6,7,2,3,4,6,5 };
	bool t = ispai(res, 3);
	cout << boolalpha << t << endl;//cout 布尔类型会转换成int输出
	system("pause");
	return 0;
}
